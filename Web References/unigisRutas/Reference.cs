//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace unigis.unigisRutas {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsRutasSoap", Namespace="http://tempuri.org/")]
    public partial class wsRutas : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback deleteRutaOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertRutaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgramacionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsRutas() {
            this.Url = global::unigis.Properties.Settings.Default.unigis_unigisRutas_wsRutas;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event deleteRutaCompletedEventHandler deleteRutaCompleted;
        
        /// <remarks/>
        public event insertRutaCompletedEventHandler insertRutaCompleted;
        
        /// <remarks/>
        public event getProgramacionCompletedEventHandler getProgramacionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteRuta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string deleteRuta(string rutaId) {
            object[] results = this.Invoke("deleteRuta", new object[] {
                        rutaId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRutaAsync(string rutaId) {
            this.deleteRutaAsync(rutaId, null);
        }
        
        /// <remarks/>
        public void deleteRutaAsync(string rutaId, object userState) {
            if ((this.deleteRutaOperationCompleted == null)) {
                this.deleteRutaOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRutaOperationCompleted);
            }
            this.InvokeAsync("deleteRuta", new object[] {
                        rutaId}, this.deleteRutaOperationCompleted, userState);
        }
        
        private void OndeleteRutaOperationCompleted(object arg) {
            if ((this.deleteRutaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRutaCompleted(this, new deleteRutaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertRuta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string insertRuta(string rutaId, string fechaRuta, string dominio, string eco, string sticker, string tipo, string estado, string orden, double latitud, double longitud) {
            object[] results = this.Invoke("insertRuta", new object[] {
                        rutaId,
                        fechaRuta,
                        dominio,
                        eco,
                        sticker,
                        tipo,
                        estado,
                        orden,
                        latitud,
                        longitud});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void insertRutaAsync(string rutaId, string fechaRuta, string dominio, string eco, string sticker, string tipo, string estado, string orden, double latitud, double longitud) {
            this.insertRutaAsync(rutaId, fechaRuta, dominio, eco, sticker, tipo, estado, orden, latitud, longitud, null);
        }
        
        /// <remarks/>
        public void insertRutaAsync(string rutaId, string fechaRuta, string dominio, string eco, string sticker, string tipo, string estado, string orden, double latitud, double longitud, object userState) {
            if ((this.insertRutaOperationCompleted == null)) {
                this.insertRutaOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertRutaOperationCompleted);
            }
            this.InvokeAsync("insertRuta", new object[] {
                        rutaId,
                        fechaRuta,
                        dominio,
                        eco,
                        sticker,
                        tipo,
                        estado,
                        orden,
                        latitud,
                        longitud}, this.insertRutaOperationCompleted, userState);
        }
        
        private void OninsertRutaOperationCompleted(object arg) {
            if ((this.insertRutaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertRutaCompleted(this, new insertRutaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getProgramacion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getProgramacion() {
            object[] results = this.Invoke("getProgramacion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getProgramacionAsync() {
            this.getProgramacionAsync(null);
        }
        
        /// <remarks/>
        public void getProgramacionAsync(object userState) {
            if ((this.getProgramacionOperationCompleted == null)) {
                this.getProgramacionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgramacionOperationCompleted);
            }
            this.InvokeAsync("getProgramacion", new object[0], this.getProgramacionOperationCompleted, userState);
        }
        
        private void OngetProgramacionOperationCompleted(object arg) {
            if ((this.getProgramacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgramacionCompleted(this, new getProgramacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void deleteRutaCompletedEventHandler(object sender, deleteRutaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRutaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRutaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void insertRutaCompletedEventHandler(object sender, insertRutaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertRutaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertRutaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getProgramacionCompletedEventHandler(object sender, getProgramacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgramacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgramacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591